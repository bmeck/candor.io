print = global.print
p = global.prettyPrint
require = global.require

throw = (err) {
  p(err)
  global.exit()
}

// Used to emit on errors when libuv badness happens
check = (status) {
  if (status) {
    throw(require('uv').lastError())
  }
}

Tcp = require('tcp')

p("Tcp", Tcp)
server = Tcp.create()

check(server:bind("0.0.0.0", 8080))

onConnection = (client) {
  p("new client", client)

  check(client:readStart((nread, chunk) {
    if (nread == -1) {
      err = require('uv').lastError()
      if (err.name == "EOF") {
        p("client end", client)
        client:shutdown((status) {
          p("client shutdown", client)
          check(status)
          client:close(() {
            p("client left", client)
          })
        })
      } else {
        throw(err)
      }
      return
    }
    if (nread > 0) {
      client:write(chunk)
      return
    }
  }))

}

check(server:listen(128, () {
  client = Tcp.create()
  check(server:accept(client))
  onConnection(client)
}))
p("server", server)
print("TCP echo server listening on port 8080")
